#include "stage_configurator_invasion.as"

// ------------------------------------------------------------------------------------------------
class StageConfiguratorCampaign : StageConfiguratorInvasion {
	MapRotatorCampaign@ m_mapRotatorCampaign;

	// ------------------------------------------------------------------------------------------------
	StageConfiguratorCampaign(GameModeInvasion@ metagame, MapRotatorCampaign@ mapRotator) {
		super(metagame, mapRotator);
		// also need to store the adventure specific pointer, avoid casting
		@m_mapRotatorCampaign = @mapRotator;
	}

	// ------------------------------------------------------------------------------------------------
	void setup() {
		StageConfiguratorInvasion::setup();
		// setupFinalStages(); // may include final boss fight level at some point.

		setupTransports();
		setupStartingMaps();
	}

	// ------------------------------------------------------------------------------------------------
	Stage@ setupCompletedStage(Stage@ inputStage) {
		Stage@ stage = createStage();

		stage.m_mapInfo = inputStage.m_mapInfo;
		stage.m_finalBattle = inputStage.m_finalBattle;
		stage.m_includeLayers = inputStage.m_includeLayers;

		stage.m_maxSoldiers = 1;

		{
			Faction f(getFactionConfigs()[0], createCommanderAiCommand(0));
			stage.m_factions.insertLast(f);
		}

		//addFixedSpecialCrates(stage);
		//addRandomSpecialCrates(stage, stage.m_minRandomCrates, stage.m_maxRandomCrates);

		return stage;
	}

	// ------------------------------------------------------------------------------------------------
	protected void setupNormalStages() {
		addStage(setupStage1());
		addStage(setupStage2());
		addStage(setupStage3());
		addStage(setupStage4());
		addStage(setupStage5());
		addStage(setupStage6());
		addStage(setupStage7());
		addStage(setupStage8());
		addStage(setupStage9());
		addStage(setupStage10());
		addStage(setupStage11());
		addStage(setupStage12());
	}

	// ------------------------------------------------------------------------------------------------

	/*
	protected void setupFinalStages() {
		// addStage(setupStage13());
	}
	*/

	// --------------------------------------------
	protected void setupWorld() {
		WorldCampaign world(m_metagame);

		dictionary mapIdToRegionIndex;
		mapIdToRegionIndex.set("map1", 0);
		mapIdToRegionIndex.set("map2", 1);
		mapIdToRegionIndex.set("map3", 2);
		mapIdToRegionIndex.set("map4", 3);
		mapIdToRegionIndex.set("map5", 4);
		mapIdToRegionIndex.set("map6", 5);
		mapIdToRegionIndex.set("map7", 6);
		mapIdToRegionIndex.set("map8", 7);
		mapIdToRegionIndex.set("map9", 8);
		mapIdToRegionIndex.set("map10", 9);
		mapIdToRegionIndex.set("map11", 10);
		mapIdToRegionIndex.set("map12", 11);

		world.init(mapIdToRegionIndex);

		m_mapRotatorCampaign.setWorld(world);
	}

	// --------------------------------------------
	protected void setupTransports() {
		// area 1
	    addTransport("map1", "hitbox_extraction2", "map2");
		addTransport("map2", "hitbox_extraction3", "map3");
		addTransport("map3", "hitbox_extraction4", "map4");

		// area 2
		addTransport("map4", "hitbox_extraction5", "map5");
		addTransport("map5", "hitbox_extraction6", "map6");
		addTransport("map6", "hitbox_extraction7", "map7");

		// area 3
		addTransport("map7", "hitbox_extraction8", "map8");
		addTransport("map8", "hitbox_extraction2", "map9");
		addTransport("map9", "hitbox_extraction6", "map10");

		// area 4
		addTransport("map10", "hitbox_extraction1", "map11");
	    addTransport("map11", "hitbox_extraction11", "map11");
	    // addTransport("map12", "hitbox_extraction12", "map13"); // final mission here, or port to boss?
	}

	// --------------------------------------------
	protected void addTransport(string sourceMapName, string hitboxId, string targetMapName) {
		m_mapRotatorCampaign.addTransport(sourceMapName, hitboxId, targetMapName);
	}

	// --------------------------------------------
	protected void setupStartingMaps() {
		m_mapRotatorCampaign.addStartingMap("map1");

		const UserSettings@ settings = m_metagame.getUserSettings();
		if (settings.m_continueAsNewCampaign) {
			// add more starting maps when continuing the campaign after finishing it
			m_mapRotatorCampaign.addStartingMap("map1");
			m_mapRotatorCampaign.addStartingMap("map4");
			m_mapRotatorCampaign.addStartingMap("map7");
			m_mapRotatorCampaign.addStartingMap("map10");
			// m_mapRotatorCampaign.addStartingMap("map13"); // if add final boss level
		}
	}
}

// generated by atlas.exe
#include "world_init.as"
#include "world_offender_visual.as"
#include "world_marker.as"

// ------------------------------------------------------------------------------------------------
class WorldCampaign : World {
	WorldCampaign(Metagame@ metagame) {
		super(metagame);
	}

	// ------------------------------------------------------------------------------------------------
	protected string getOffenderVisualCommand(string transportName, int colorFactionId, int id) const {
		return getWorldOffenderVisualCommand(transportName, colorFactionId, id);
	}

	// ----------------------------------------------------------------------------
	protected Marker getMarker(string key) const {
		return getWorldMarker(key);
	}

	// ----------------------------------------------------------------------------
	protected string getPosition(string key) const {
		return getWorldPosition(key);
	}

	// ------------------------------------------------------------------------------------------------
	protected string getInitCommand() const {
		return getWorldInitCommand();
	}
}